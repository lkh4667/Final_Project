<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

   <mvc:annotation-driven />
   <!-- [1] DataSource빈 선언 -->
   <bean id="dataSource"
      class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName"
         value="oracle.jdbc.OracleDriver" />
      
      <!-- 로컬 주소 -->
    
       <!-- <property name="url" value="jdbc:oracle:thin://@localhost:1521:xe" /> -->
      
      <!-- 서버 주소 -->
      <property name="url" value="jdbc:oracle:thin://@192.168.10.60:1521:xe" />
      
      <property name="username" value="doit" />
      <property name="password" value="a1234" />

   </bean>

   <!-- [2] SqlSessionFactoryBean 빈 선언 -->
   <bean id="sqlSessionFactory"
      class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="mapperLocations"
         value="classpath:config/*Mapper.xml" />
   </bean>

   <!-- [3] SqlSessionTemplate 빈 선언 -->
   <bean id="sqlSession"
      class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg ref="sqlSessionFactory" />
   </bean>

   <!-- [4] TransactionManager 빈 선언 -->
   <bean id="transactionManager"
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource" />
   </bean>

   <!-- [5] 선언적 트랜잭션(tx:advice) 선언 -->
   <tx:advice id="txAdvice"
      transaction-manager="transactionManager">
      <tx:attributes>
         <tx:method name="*Process"
            rollback-for="java.lang.Exception" />
      </tx:attributes>
   </tx:advice>

   <!-- [6] 트랜잭션 설정 -->
   <aop:config>
      <aop:advisor advice-ref="txAdvice"
         pointcut="execution(* service.*.*(..))" />
   </aop:config>

   <!-- [7] DAO 빈 선언 -->
   <bean id="dao" class="dao.BucketListDaoImp">
      <property name="sqlSession" ref="sqlSession" />
   </bean>
   <bean id="mdao" class="dao.MemberDaoImp">
      <property name="sqlSession" ref="sqlSession" />
   </bean>
   
   <bean id="cdao" class="dao.ChallengeDaoImp">
      <property name="sqlSession" ref="sqlSession"/>
   </bean>
   
   <bean id="rvdao" class="dao.ReviewDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>
	
   <!-- [8] Service 빈 선언 -->
   <bean id="service" class="service.BucketListServiceImp">
      <property name="dao" ref="dao" />
      <property name="cdao" ref="cdao" />
   </bean>
   
   <bean id="mservice" class="service.MemberServiceImp">
      <property name="mdao" ref="mdao" />
   </bean>
   
   <bean id="cservice" class="service.ChallengeServiceImp">
      <property name="cdao" ref="cdao" />      
   </bean>
   
   <bean id="rvservice" class="service.ReviewServiceImp">
		<property name="dao" ref="rvdao" /> 
	</bean>
   

   <!-- Controller -->
   <bean class="controller.MainPageController">
      <property name="service" ref="service" />
   </bean>
   <bean class="controller.LoginController">
      <property name="mservice" ref="mservice" />
   </bean>
   <bean class="controller.AdminPageController">
      <property name="service" ref="service" />
   </bean>
   
   <bean class="controller.BoardPageController" >
		<property name="service" ref="rvservice" />
	</bean>
	
   <bean class="controller.PopularPageController" />
   
   <bean class="controller.ChallengeController" >
      <property name="cservice" ref="cservice"/>
   </bean>
   
   <bean class="controller.AboutPageController" />
   
      <!-- 파일 업로드 시작 -->
   
   <!-- 첨부파일의 임시기억장치 경로 설정 
   <bean id = "uploadDirResource" class="org.springframework.core.io.FileSystemResource">
      <constructor-arg value ="c:/temp/" /> (테스트용)
      <constructor-arg value ="./src/main/webapp/files/" /> (서비스용)
   </bean>   -->
   
   <!-- 첨부파일을 임시기억저장소에 저장한다.(첨부파일이 있을경우 선언해줘야하는 빈) -->
   <bean id = "multipartResolver" class = "org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <!-- 버전이 낮을경우에 임시 기억장소를 저장하기위한 경로설정해주는 property선언을 해야한다. -->
      <!-- <property name="uploadTempDir" ref = "uploadDirResource" /> -->
      <!-- <property name="maxUploadSize" value = "1000000000" /> -->
        <!-- max upload size in bytes -->
        <property name="maxUploadSize" value="20971520" /> <!-- 20MB -->
        <!-- max size of file in memory (in bytes) -->
        <property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
   </bean>
   
   <!-- tiles -->
   <bean
      class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
      <property name="definitions">
         <list>
            <value>/WEB-INF/tiles.xml</value>
         </list>
      </property>
   </bean>
   
       <bean id="jsonView"
class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
      <property name="contentType"
         value="application/json;charset=UTF-8" /> 
   </bean>
   
   <!-- view -->
   <bean
      class="org.springframework.web.servlet.view.UrlBasedViewResolver">
      <property name="viewClass"
         value="org.springframework.web.servlet.view.tiles3.TilesView" />
      <property name="order" value="1" />
   </bean>

   <bean
      class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/WEB-INF/view/" />
      <property name="suffix" value=".jsp" />
      <property name="order" value="2" />
   </bean>

   <!-- interceptor -->
   <mvc:interceptors>
      <mvc:interceptor>
         <mvc:mapping path="/myPageShift.do" />
         <mvc:mapping path="/challenge.do" />
         <bean class="interceptor.LoginInterceptor" />
      </mvc:interceptor>
   </mvc:interceptors>

</beans>